# Generates vtiles from database
gen:
  public: true
  formats: [pbf]
  uri: bridge://
  xml:
    npm: ["@kartotherian/osm-bright-source", "data.xml"]
  xmlSetDataSource:
    if:
      dbname: gis
      host: ''
      type: postgis
    set:
      host: localhost
      user: {var: osmdb-user}
      password: {var: osmdb-pswd}

# View tiles as generated directly from the database. Don't view zoom0-5
genview:
  public: true
  formats: [png,json,headers,svg,jpeg]
  scales: [1.3, 1.5, 2, 2.6, 3]
  static: true
  maxheight: 2048
  maxwidth: 2048
  uri: vector://
  xml:
    loader: "@kartotherian/osm-bright-style"
  xmlSetParams:
    source: {ref: gen}

# Filter out any small tiles without significant data on or after zoom 10
substgen:
  public: true
  formats: [pbf]
  uri: substantial://
  params:
    source: {ref: gen}
    minzoom: 10
    minsize: 500
    layers: [water, landuse]

# If tile has been filtered out by substgen, use overzoom to recreate it
substgenoz:
  public: true
  formats: [pbf]
  uri: overzoom://
  params:
    source: {ref: substgen}

# View tiles from generator, without the insignificant ones (will show blank squares)
substgenview:
  public: true
  formats: [png,json,headers,svg,jpeg]
  scales: [1.3, 1.5, 2, 2.6, 3]
  static: true
  maxheight: 2048
  maxwidth: 2048
  uri: vector://
  xml:
    loader: "@kartotherian/osm-bright-style"
  xmlSetParams:
    source: {ref: substgen}

# View tiles from generator, and use overzoom for any filtered out ones
substgenozview:
  public: true
  formats: [png,json,headers,svg,jpeg]
  scales: [1.3, 1.5, 2, 2.6, 3]
  static: true
  maxheight: 2048
  maxwidth: 2048
  uri: vector://
  xml:
    loader: "@kartotherian/osm-bright-style"
  xmlSetParams:
    source: {ref: substgenoz}
