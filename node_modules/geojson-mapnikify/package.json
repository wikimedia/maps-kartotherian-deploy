{
  "_args": [
    [
      {
        "raw": "geojson-mapnikify@https://registry.npmjs.org/geojson-mapnikify/-/geojson-mapnikify-0.7.2.tgz",
        "scope": null,
        "escapedName": "geojson-mapnikify",
        "name": "geojson-mapnikify",
        "rawSpec": "https://registry.npmjs.org/geojson-mapnikify/-/geojson-mapnikify-0.7.2.tgz",
        "spec": "https://registry.npmjs.org/geojson-mapnikify/-/geojson-mapnikify-0.7.2.tgz",
        "type": "remote"
      },
      "/opt/service"
    ]
  ],
  "_from": "geojson-mapnikify@>=0.7.1 <0.8.0",
  "_id": "geojson-mapnikify@0.7.2",
  "_inCache": true,
  "_location": "/geojson-mapnikify",
  "_phantomChildren": {
    "aws-sign2": "0.6.0",
    "aws4": "1.6.0",
    "caseless": "0.11.0",
    "combined-stream": "1.0.5",
    "extend": "3.0.0",
    "forever-agent": "0.6.1",
    "form-data": "2.1.2",
    "har-validator": "2.0.6",
    "hawk": "3.1.3",
    "http-signature": "1.1.1",
    "is-typedarray": "1.0.0",
    "isstream": "0.1.2",
    "json-stringify-safe": "5.0.1",
    "mime-types": "2.1.14",
    "oauth-sign": "0.8.2",
    "stringstream": "0.0.5",
    "tough-cookie": "2.3.2",
    "tunnel-agent": "0.4.3"
  },
  "_requested": {
    "raw": "geojson-mapnikify@https://registry.npmjs.org/geojson-mapnikify/-/geojson-mapnikify-0.7.2.tgz",
    "scope": null,
    "escapedName": "geojson-mapnikify",
    "name": "geojson-mapnikify",
    "rawSpec": "https://registry.npmjs.org/geojson-mapnikify/-/geojson-mapnikify-0.7.2.tgz",
    "spec": "https://registry.npmjs.org/geojson-mapnikify/-/geojson-mapnikify-0.7.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/kartotherian-snapshot",
    "/tilelive-overlay"
  ],
  "_resolved": "https://registry.npmjs.org/geojson-mapnikify/-/geojson-mapnikify-0.7.2.tgz",
  "_shasum": "59159b96d003736b90b83de420199f0ff9796cfa",
  "_shrinkwrap": null,
  "_spec": "geojson-mapnikify@https://registry.npmjs.org/geojson-mapnikify/-/geojson-mapnikify-0.7.2.tgz",
  "_where": "/opt/service",
  "author": {
    "name": "Tom MacWright"
  },
  "bin": {
    "geojson-mapnikify": "./bin/geojson-mapnikify"
  },
  "bugs": {
    "url": "https://github.com/mapbox/geojson-mapnikify/issues"
  },
  "dependencies": {
    "agentkeepalive": "~2.0.2",
    "blend": "~1.2.0",
    "geojson-normalize": "~0.0.1",
    "makizushi": "~1.4.0",
    "minimist": "~1.2.0",
    "queue-async": "~1.0.7",
    "request": "~2.78.0",
    "sigmund": "~1.0.0",
    "xtend": "~4.0.0"
  },
  "description": "transform geojson with simplestyle-spec into mapnik xml",
  "devDependencies": {
    "coveralls": "~2.11.1",
    "glob": "~4.0.5",
    "istanbul": "~0.3.0",
    "mapnik": "~3.5.0",
    "tape": "~2.14.0"
  },
  "homepage": "https://github.com/mapbox/geojson-mapnikify",
  "keywords": [
    "geojson",
    "mapnik",
    "xml",
    "simplestyle"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "geojson-mapnikify",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/mapbox/geojson-mapnikify.svg)](https://travis-ci.org/mapbox/geojson-mapnikify) [![Coverage Status](https://coveralls.io/repos/mapbox/geojson-mapnikify/badge.png)](https://coveralls.io/r/mapbox/geojson-mapnikify) [![Code Climate](https://codeclimate.com/github/mapbox/geojson-mapnikify/badges/gpa.svg)](https://codeclimate.com/github/mapbox/geojson-mapnikify)\n\n# geojson-mapnikify\n\nTransform [GeoJSON](http://geojson.org/) objects into [Mapnik](http://mapnik.org/)\nXML stylesheets with embedded GeoJSON data and [simplestyle-spec](https://github.com/mapbox/simplestyle-spec)-derived\nstyles.\n\n## install\n\nAs a dependency:\n\n    npm install --save geojson-mapnikify\n\nAs a binary:\n\n    npm install -g geojson-mapnikify\n\n## api\n\nAssumptions:\n\n* GeoJSON is valid, and in EPSG:4326\n* Styles, if any, are expressed in simplestyle-spec\n* Mapnik **3.x** is the rendering engine\n\n## binary\n\nIf you install `-g`, you can use `geojson-mapnikify` as a binary that takes\na single GeoJSON file as an argument and writes a Mapnik XML stylesheet\nto stdout.\n\n```\n$ geojson-mapnikify test/data/point-retina.geojson > stylesheet.xml\n$ geojson-mapnikify test/data/point-retina.geojson retina > stylesheet-retina.xml\n```\n\n### `mapnikify(geojson, retina, callback)`\n\nTransform GeoJSON into Mapnik XML.\n\n* `geojson` is a GeoJSON object.\n* `retina` is true or false for whether the style should be optimized for 2x rendering.\n* `callback` called with `(err, xml)` where xml is a string\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/geojson-mapnikify.git"
  },
  "scripts": {
    "coverage": "istanbul cover tape test/*.js && coveralls < ./coverage/lcov.info",
    "test": "tape test/*.js"
  },
  "version": "0.7.2"
}
