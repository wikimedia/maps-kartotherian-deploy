{
  "name": "numeral",
  "version": "1.5.6",
  "description": "Format and manipulate numbers.",
  "homepage": "http://numeraljs.com",
  "author": {
    "name": "Adam Draper",
    "email": "adamwdraper@gmail.com",
    "url": "http://github.com/adamwdraper"
  },
  "keywords": [
    "numeral",
    "number",
    "format",
    "time",
    "money",
    "percentage"
  ],
  "main": "./numeral.js",
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adamwdraper/Numeral-js.git"
  },
  "bugs": {
    "url": "https://github.com/adamwdraper/Numeral-js/issues"
  },
  "license": "MIT",
  "devDependencies": {
    "chai": "^3.5.0",
    "grunt": "latest",
    "grunt-contrib-concat": "1.0.1",
    "grunt-contrib-jshint": "latest",
    "grunt-contrib-nodeunit": "1.0.0",
    "grunt-contrib-uglify": "latest",
    "grunt-karma": "^2.0.0",
    "grunt-mocha-test": "^0.13.2",
    "grunt-saucelabs": "*",
    "karma": "^1.3.0",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "karma-mocha-reporter": "^2.2.1",
    "karma-sauce-launcher": "^1.1.0",
    "mocha": "^3.1.2",
    "uglify-js": "latest"
  },
  "scripts": {
    "test": "grunt"
  },
  "ender": "./ender.js",
  "_id": "numeral@1.5.6",
  "_from": "https://registry.npmjs.org/numeral/-/numeral-1.5.6.tgz",
  "readme": "# [Numeral.js](http://numeraljs.com/)\n\nA javascript library for formatting and manipulating numbers.\n\n[Website and documentation](http://numeraljs.com/)\n\n\n# Travis Build Status\n\nMaster [![Build Status](https://api.travis-ci.org/adamwdraper/Numeral-js.svg)](https://travis-ci.org/adamwdraper/Numeral-js)\n\nDevelop [![Build Status](https://travis-ci.org/adamwdraper/Numeral-js.svg?branch=develop)](https://travis-ci.org/adamwdraper/Numeral-js)\n\n# NPM\n\n[![NPM](https://nodei.co/npm/numeral.svg?downloads=true)](https://nodei.co/npm/numeral/)\n\n# Contributing\n\n#### Important: Please create your branch from and submit pull requests to the `develop` branch.\n\n1. Fork the library\n\n2. [Install grunt](http://gruntjs.com/getting-started#installing-the-cli)\n\n3. Run `npm install` to install dependencies\n\n4. Create a new branch from `develop`\n\n5. Add your tests to the files in `/tests`\n\n6. To test your tests, run `grunt`\n\n7. When all your tests are passing, run `grunt build` to minify all files\n\n8. Submit a pull request to the `develop` branch.\n\n\n### Languages\n\nWhen naming language files use the [ISO 639-1 language codes](http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) supplemented by [ISO 3166-1](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country codes when necessary.\n\n### Language translations will not be merged without unit tests.\n\nSee [the english unit tests](https://github.com/adamwdraper/Numeral-js/blob/master/tests/languages/en-gb.js) for an example.\n\n\n# Changelog\n\n### 1.5.6\n\nBug fix: numeral converts strings to numbers\n\nBug fix: Null values return same as 0\n\n### 1.5.5\n\nContained breaking changes, recommended to use 1.5.6\n\nBug fix: Switch bytes back to `b` and change iecBinary to `ib`, and calculate both using 1024 for backwards compatibility\n\n### 1.5.4\n\nContained breaking changes, recommended to use 1.5.6\n\nTests: Changed all tests to use Mocha and Chai\n\nTests: Added browser tests for Chrome, Firefox, and IE using saucelabs\n\nAdded reset function to reset numeral to default options\n\nAdded nullFormat option\n\nUpdate reduce polyfill\n\nAdded Binary bytes\n\nBug fix: Fixes problem with many optional decimals\n\n### 1.5.3\n\nAdded currency symbol to optionally appear before negative sign / open paren\n\nAdded float precision math support\n\nAdded specification of abbreviation in thousands, millions, billions\n\n### 1.5.2\n\nBug fix: Unformat should pass through if given a number\n\nAdded a mechanism to control rounding behaviour\n\nAdded languageData() for getting and setting language props at runtime\n\n### 1.5.1\n\nBug fix: Make sure values aren't changed during formatting\n\n### 1.5.0\n\nAdd defaultFormat(). numeral().format() uses the default to format if no string is provided\n\n.unformat() returns 0 when passed no string\n\nAdded languages.js that contains all languages\n\nBug fix: Fix bug while unformatting ordinals\n\nAdd format option to always show signed value\n\nAdded ability to instantiate numeral with a string value of a number\n\n### 1.4.9\n\nBug fix: Fix bug while unformatting ordinals\n\n### 1.4.8\n\nBug fix: Throw error if language is not defined\n\n### 1.4.7\n\nBug fix: Fix typo for trillion\n\n### 1.4.6\n\nBug fix: remove ' from unformatting regex that was causing an error with fr-ch.js\n\n### 1.4.5\n\nAdd zeroFormat() function that accepts a string for custom formating of zeros\n\nAdd valueOf() function\n\nChain functionality to language function\n\nMake all minified files have the same .min.js filename ending\n\n### 1.4.1\n\nBug fix: Bytes not formatting correctly\n\n### 1.4.0\n\nAdd optional format for all decimals\n\n### 1.3.4\n\nRemove AMD module id. (This is encouraged by require.js to make the module more portable, and keep it from creating a global)\n\n### 1.3.3\n\nAMD define() compatibility.\n\n### 1.3.2\n\nBug fix: Formatting some numbers results in the wrong value. Issue #21\n\n### 1.3.1\n\nBug fix: Minor fix to unformatting parser\n\n### 1.3.0\n\nAdd support for spaces before/after $, a, o, b in a format string\n\nBug fix: Fix unformat for languages that use '.' in ordinals\n\nBug fix: Fix round up floating numbers with no precision correctly.\n\nBug fix: Fix currency signs at the end in unformat\n\n### 1.2.6\n\nAdd support for optional decimal places\n\n### 1.2.5\n\nAdd support for appending currency symbol\n\n### 1.2.4\n\nAdd support for humanized filesizes\n\n### 1.2.3\n\nBug Fix: Fix unformatting for languages that use '.' as thousands delimiter\n\n### 1.2.2\n\nChanged language definition property 'money' to 'currency'\n\n### 1.2.1\n\nBug fix: Fix unformatting non-negative abbreviations\n\n### 1.2.0\n\nAdd language support\n\nUpdate testing for to include languages\n\n### 1.1.0\n\nAdd Tests\n\nBug fix: Fix difference returning negative values\n\n### 1.0.4\n\nBug fix: Non negative numbers were displaying as negative when using parentheses\n\n### 1.0.3\n\nAdd ordinal formatting using 'o' in the format\n\n### 1.0.2\n\nAdd clone functionality\n\n### 1.0.1\n\nAdded abbreviations for thousands and millions using 'a' in the format\n\n### 1.0.0\n\nInitial release\n\n\n# Acknowlegements\n\nNumeral.js, while less complex, was inspired by and heavily borrowed from [Moment.js](http://momentjs.com)\n\n\n# License\n\nNumeral.js is freely distributable under the terms of the MIT license.\n\nCopyright (c) 2012 Adam Draper\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_shasum": "3831db968451b9cf6aff9bf95925f1ef8e37b33f",
  "_resolved": "https://registry.npmjs.org/numeral/-/numeral-1.5.6.tgz"
}
