{
  "_args": [
    [
      {
        "raw": "manakin@https://registry.npmjs.org/manakin/-/manakin-0.4.8.tgz",
        "scope": null,
        "escapedName": "manakin",
        "name": "manakin",
        "rawSpec": "https://registry.npmjs.org/manakin/-/manakin-0.4.8.tgz",
        "spec": "https://registry.npmjs.org/manakin/-/manakin-0.4.8.tgz",
        "type": "remote"
      },
      "/opt/service"
    ]
  ],
  "_from": "manakin@>=0.4.7 <0.5.0",
  "_id": "manakin@0.4.8",
  "_inCache": true,
  "_location": "/manakin",
  "_phantomChildren": {},
  "_requested": {
    "raw": "manakin@https://registry.npmjs.org/manakin/-/manakin-0.4.8.tgz",
    "scope": null,
    "escapedName": "manakin",
    "name": "manakin",
    "rawSpec": "https://registry.npmjs.org/manakin/-/manakin-0.4.8.tgz",
    "spec": "https://registry.npmjs.org/manakin/-/manakin-0.4.8.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/pg-promise"
  ],
  "_resolved": "https://registry.npmjs.org/manakin/-/manakin-0.4.8.tgz",
  "_shasum": "fd6779dcd6399d0d15833ecd62ca4f7c9a131190",
  "_shrinkwrap": null,
  "_spec": "manakin@https://registry.npmjs.org/manakin/-/manakin-0.4.8.tgz",
  "_where": "/opt/service",
  "author": {
    "name": "Vitaly Tomilov",
    "email": "vitaly.tomilov@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/vitaly-t/manakin/issues",
    "email": "vitaly.tomilov@gmail.com"
  },
  "dependencies": {},
  "description": "Prime colors for your console",
  "devDependencies": {
    "coveralls": "~2.13.1",
    "eslint": "~4.4.1",
    "istanbul": "~0.4.5",
    "jasmine-node": "~1.14.5"
  },
  "engines": {
    "node": ">=0.10",
    "npm": ">=1.4"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/vitaly-t/manakin",
  "keywords": [
    "color",
    "console",
    "pretty",
    "console error",
    "console warning"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "manakin",
  "optionalDependencies": {},
  "readme": "manakin\r\n=======\r\n\r\n[![Build Status](https://travis-ci.org/vitaly-t/manakin.svg?branch=master)](https://travis-ci.org/vitaly-t/manakin)\r\n[![Coverage Status](https://coveralls.io/repos/vitaly-t/manakin/badge.svg?branch=master)](https://coveralls.io/r/vitaly-t/manakin?branch=master)\r\n[![Downloads Count](http://img.shields.io/npm/dm/manakin.svg)](https://www.npmjs.com/package/manakin)\r\n[![Join the chat at https://gitter.im/vitaly-t/manakin](https://badges.gitter.im/vitaly-t/manakin.svg)](https://gitter.im/vitaly-t/manakin?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n<img align=\"left\" width=\"218\" height=\"298\" src=\"https://raw.githubusercontent.com/vitaly-t/manakin/master/docs/manakin.jpg\" alt=\"Wire-tailed manakin\">\r\n\r\nThe quickest and safest way to set colorful output for your Node.js console, without messing with the colors at all,\r\nand to continue using the rich syntax and the output format supported by Node.js console methods:\r\n\r\n&nbsp;&bull; with a list of parameters: `console.log(obj1 [, obj2, ..., objN]);`<br/>\r\n&nbsp;&bull; with message formatting: `console.log(msg [, subst1, ..., substN]);`\r\n\r\nCan be used either locally or globally (by overriding the `console` object), with automatic colors applied according to which\r\nmethod is used - see the screenshot below.   \r\n\r\n<br/>\r\n\r\n_minimum code_ &#10004;&nbsp;&nbsp;_no dependencies_ &#10004;\r\n\r\n<br/>\r\n\r\nThis library focuses on providing consistent output format for console methods after applying the colors, in contrast to generic color\r\nlibraries that only apply colors to text.\r\n\r\n<img width=\"738\" height=\"350\" src=\"https://raw.githubusercontent.com/vitaly-t/manakin/master/docs/console.jpg\" alt=\"Console output colors\">\r\n\r\n## Installing\r\n\r\n```\r\n$ npm install manakin --save\r\n```\r\n\r\n## Usage\r\n\r\n#### Using colors globally\r\n\r\n```js\r\nrequire('manakin').global; // sets colors globally, for the `console` object\r\n\r\nconsole.log(val1, val2, ...); // white/default text output\r\nconsole.warn(val1, val2, ...); // yellow text output\r\nconsole.error(val1, val2, ...); // red text output\r\nconsole.success(val1, val2, ...); // green text output (custom method)\r\nconsole.info(val1, val2, ...); // cyan text output\r\n```\r\n\r\n#### Using colors locally\r\n\r\n```js\r\nvar con = require('manakin').local; // use colors locally\r\n\r\ncon.log(val1, val2, ...); // white/default text output\r\ncon.warn(val1, val2, ...); // yellow text output\r\ncon.error(val1, val2, ...); // red text output\r\ncon.success(val1, val2, ...); // green text output (custom method)\r\ncon.info(val1, val2, ...); // cyan text output\r\n```\r\n\r\n#### Customization Features\r\n\r\nYou can easily do the following:\r\n\r\n- change brightness individually for each available method\r\n- [override predefined colors](https://github.com/vitaly-t/manakin/blob/master/docs/API.md#overriding-colors) for existing methods\r\n- create [custom-color methods](https://github.com/vitaly-t/manakin/blob/master/docs/API.md#custom-methods), with the same output formatting   \r\n\r\nFor more details, see [the full API].\r\n\r\n## License\r\n\r\nCopyright Â© 2017 [Vitaly Tomilov](https://github.com/vitaly-t);\r\nReleased under the MIT license.\r\n\r\n[the full API]:https://github.com/vitaly-t/manakin/tree/master/docs/API.md\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vitaly-t/manakin.git"
  },
  "scripts": {
    "coverage": "istanbul cover ./node_modules/jasmine-node/bin/jasmine-node test",
    "lint": "eslint ./lib ./test",
    "test": "jasmine-node test",
    "travis": "npm run lint && istanbul cover ./node_modules/jasmine-node/bin/jasmine-node test --captureExceptions && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "version": "0.4.8"
}
