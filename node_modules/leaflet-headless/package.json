{
  "name": "leaflet-headless",
  "version": "0.2.5",
  "description": "Leaflet for node.",
  "main": "index.js",
  "browser": "browser.js",
  "scripts": {
    "lint": "eslint index.js src/* examples/*/index.js",
    "test": "mocha -t 40000 -R spec test/test.js && npm run lint",
    "release": "mversion patch -m",
    "release-minor": "mversion minor -m"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/jieter/leaflet-headless.git"
  },
  "author": {
    "name": "Jan Pieter Waagmeester",
    "email": "jieter@jieter.nl"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "dependencies": {
    "canvas": "~1.6.2",
    "jsdom": "~9.8.3",
    "leaflet": "^1.0.3",
    "leaflet-image": "^0.4.0",
    "request": "^2.65.0"
  },
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-leaflet": "0.0.12",
    "eslint": "^3.12.2",
    "image-diff": "^1.6.3",
    "mapbox.js": "^3.0.1",
    "mocha": "^2.2.1",
    "mversion": "^1.10.1"
  },
  "readme": "Leaflet-headless\n----------------\n\n[Leaflet](http://leafletjs.com) for node.\n\n\n - Has Leaflet 1.0.3 as dependency.\n - Uses [jsdom](https://github.com/tmpvar/jsdom) to fake ad DOM.\n - Uses `Image` implementation and canvas from [canvas](https://github.com/LearnBoost/node-canvas).\n   Note that node-canvas needs some dependencies to be installed: for ubuntu: `sudo apt-get install libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++`\n - Tiles, Markers and vector layers work well with [leaflet-image](https://github.com/mapbox/leaflet-image)\n - It's slow (~4s for the `examples/choropleth/` on my machine).\n\n\n### Example\n\nRun `npm install leaflet-headless` to install the package. Requiring `leaflet-headless` will introduce a global `L` which just works like in the browser.\n\nFor vector layers, make sure to use the canvas renderer if you want to use `leaflet-image`:\n\n```JavaScript\nvar L = require('leaflet-headless');\n\nvar map = L.map(document.createElement('div')).setView([52, 4], 10);\n\nvar marker = L.marker([52, 4]).addTo(map);\n\nvar latlngs = [[52, 4], [54, 4], [54, 6], [52, 6], [52, 4]];\nvar polyline = L.polyline(latlngs).addTo(map);\n```\n\n### Setting map size\n\nBecause jsdom does not support `clientWidth`/`clientHeight`, `leaflet-headless` defaults to a map size of 1024x1024px. To adjust this size, use `L.Map.setSize(width, height)`.\n\n```JavaScript\nmap.setSize(800, 600);\n```\n\n### Saving images\n\n`leaflet-headless` adds a convenience function to `L.Map` to save the current map to an image using `leaflet-image`.\n\n`L.Map.saveImage(filename, callback)`: Save image to `filename` and call `callback` when ready.\n\n```JavaScript\nmap.saveImage('test.png', function (filename) {\n    console.log('Saved map image to ' + filename);\n});\n```\n\n### Other examples:\n - `examples/leaflet-image/`, using [leaflet-image](https://github.com/mapbox/leaflet-image) to output a `.png`.\n - `examples/choropleth/`, [Choropleth tutorial from leafletjs.com](http://leafletjs.com/examples/choropleth.html) using [leaflet-image](https://github.com/mapbox/leaflet-image) to output a `.png`.\n - `examples/mapbox-geojson`, use [mapbox.js](https://github.com/mapbox/mapbox.js) to render a GeoJSON file with [simplestyle](https://github.com/mapbox/simplestyle-spec) styling.\n\n```\n~/leaflet-headless$ npm install\n[...]\n~/leaflet-headless$ cd examples/leaflet-image/\n~/leaflet-headless/examples/leaflet-image/$ node index.js\nSave to image using leaflet-image...\nSaved test.png\n```\n\n### Run tests\n\n`npm test`\n\n### Attribution\nThis is inspired by https://github.com/rclark/server-side-leaflet.\n",
  "bugs": {
    "url": "https://github.com/jieter/leaflet-headless/issues"
  },
  "homepage": "https://github.com/jieter/leaflet-headless#readme",
  "_id": "leaflet-headless@0.2.5",
  "_shasum": "8105eeb4d0d4414ac55b39c1cc1de33bc7b2dd28",
  "_resolved": "https://registry.npmjs.org/leaflet-headless/-/leaflet-headless-0.2.5.tgz",
  "_from": "https://registry.npmjs.org/leaflet-headless/-/leaflet-headless-0.2.5.tgz"
}
