{
  "name": "sanitize-caja",
  "version": "0.1.3",
  "description": "sanitize html using caja and reasonable assumptions",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "keywords": [
    "sanitize",
    "html"
  ],
  "author": {
    "name": "Tom MacWright"
  },
  "license": "BSD-2-Clause",
  "devDependencies": {
    "tape": "~4.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/sanitize-caja.git"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/mapbox/sanitize-caja.png?branch=master)](http://travis-ci.org/mapbox/sanitize-caja)\n\n# sanitize-caja\n\nSanitize HTML content using the [Google Caja JsHtmlSanitizer](https://code.google.com/p/google-caja/wiki/JsHtmlSanitizer)\nand a set of basic assumptions, and a wrapper to make it all work in nodejs\nwithout global variable leaks and so on.\n\nThis is a slightly 'loosened' version of Caja's restrictions, to allow for\nthings like images, links, and a few HTML5 elements.\n\n## api\n\n### `sanitize(html: string)` -> sanitized string\n\nSanitize a string of HTML content, returning a sanitized string.\n\n## install\n\n    npm install sanitize-caja\n\n## example\n\n```js\nvar sanitize = require('sanitize-caja');\n\ndocument.write(sanitize(evilUserInput));\n```\n\n## see also\n\n* [Google Caja JsHtmlSanitizer](https://code.google.com/p/google-caja/wiki/JsHtmlSanitizer)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mapbox/sanitize-caja/issues"
  },
  "homepage": "https://github.com/mapbox/sanitize-caja#readme",
  "_id": "sanitize-caja@0.1.3",
  "_shasum": "cefbd7cb0e907bea74e8abcb8e86753ec5445576",
  "_resolved": "https://registry.npmjs.org/sanitize-caja/-/sanitize-caja-0.1.3.tgz",
  "_from": "https://registry.npmjs.org/sanitize-caja/-/sanitize-caja-0.1.3.tgz"
}
