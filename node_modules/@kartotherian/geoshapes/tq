[1mdiff --git a/README.md b/README.md[m
[1mindex 0bc9c0b..c5e8548 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -12,6 +12,8 @@[m [mgeoshapes:[m
   table: planet_osm_polygon[m
   user: ...[m
   password: ...[m
[32m+[m
[32m+[m[32m  maxidcount: (int, optional, default=500)[m
 ```[m
 [m
 Without this config block, the service will skip its loading[m
[1mdiff --git a/geoshapes.js b/geoshapes.js[m
[1mindex 116fef9..8aebaea 100644[m
[1m--- a/geoshapes.js[m
[1m+++ b/geoshapes.js[m
[36m@@ -14,10 +14,10 @@[m [mmodule.exports = function geoshapes(coreV, router) {[m
         params = core.getConfiguration().geoshapes;[m
 [m
         if (!params) {[m
[31m-            throw new Err("'geoshapes' parameter block is not set up in the config");[m
[32m+[m[32m            throw new Err('"geoshapes" parameter block is not set up in the config');[m
         }[m
         if (!params.database || !/^[a-zA-Z][a-zA-Z0-9]*$/.test(params.database)) {[m
[31m-            throw new Err("'geoshapes' parameters must specify 'database'");[m
[32m+[m[32m            throw new Err('"geoshapes" parameters must specify "database"');[m
         }[m
         client = postgres({[m
             host: params.host,[m
[36m@@ -26,6 +26,11 @@[m [mmodule.exports = function geoshapes(coreV, router) {[m
             password: params.password[m
         });[m
 [m
[32m+[m[32m        params.maxidcount = params.maxidcount !== undefined ? parseInt(params.maxidcount) : 500;[m
[32m+[m[32m        if (params.maxidcount <= 0) {[m
[32m+[m[32m            throw new Err('"geoshapes.maxidcount" must be a positive integer');[m
[32m+[m[32m        }[m
[32m+[m
         // ST_Collect and ST_Union seem to produce the same result, but since we do topojson locally, there is no point[m
         // to do the same optimization in both Postgress and Javascript, thus doing the simpler ST_Collect.[m
         // We should do a/b test later to see which is overall faster[m
